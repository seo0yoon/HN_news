{"id":"node_modules/acorn-node/lib/static-class-features/index.js","dependencies":[{"name":"C:\\Users\\82104\\Desktop\\HackerNews\\Hackernews\\package.json","includedInParent":true,"mtime":1658243361146},{"name":"C:\\Users\\82104\\Desktop\\HackerNews\\Hackernews\\node_modules\\acorn-node\\package.json","includedInParent":true,"mtime":1658243360743},{"name":"acorn","loc":{"line":7,"column":20,"index":138},"parent":"C:\\Users\\82104\\Desktop\\HackerNews\\Hackernews\\node_modules\\acorn-node\\lib\\static-class-features\\index.js","resolved":"C:\\Users\\82104\\Desktop\\HackerNews\\Hackernews\\node_modules\\acorn\\dist\\acorn.mjs"},{"name":"../private-class-elements","loc":{"line":19,"column":35,"index":481},"parent":"C:\\Users\\82104\\Desktop\\HackerNews\\Hackernews\\node_modules\\acorn-node\\lib\\static-class-features\\index.js","resolved":"C:\\Users\\82104\\Desktop\\HackerNews\\Hackernews\\node_modules\\acorn-node\\lib\\private-class-elements\\index.js"}],"generated":{"js":"/* Generated by `npm run build`, do not edit! */\n\n\"use strict\"\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g\n\nvar acorn = require(\"acorn\")\nvar tt = acorn.tokTypes\n\nfunction maybeParseFieldValue(field) {\n  if (this.eat(tt.eq)) {\n    var oldInFieldValue = this._inStaticFieldValue\n    this._inStaticFieldValue = true\n    field.value = this.parseExpression()\n    this._inStaticFieldValue = oldInFieldValue\n  } else { field.value = null }\n}\n\nvar privateClassElements = require(\"../private-class-elements\")\n\nmodule.exports = function(Parser) {\n  var ExtendedParser = privateClassElements(Parser)\n\n  return /*@__PURE__*/(function (ExtendedParser) {\n    function anonymous () {\n      ExtendedParser.apply(this, arguments);\n    }\n\n    if ( ExtendedParser ) anonymous.__proto__ = ExtendedParser;\n    anonymous.prototype = Object.create( ExtendedParser && ExtendedParser.prototype );\n    anonymous.prototype.constructor = anonymous;\n\n    anonymous.prototype.parseClassElement = function parseClassElement (_constructorAllowsSuper) {\n      var this$1 = this;\n\n      if (this.eat(tt.semi)) { return null }\n\n      var node = this.startNode()\n\n      var tryContextual = function (k, noLineBreak) {\n        if (typeof noLineBreak == \"undefined\") { noLineBreak = false }\n        var start = this$1.start, startLoc = this$1.startLoc\n        if (!this$1.eatContextual(k)) { return false }\n        if (this$1.type !== tt.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n        if (node.key) { this$1.unexpected() }\n        node.computed = false\n        node.key = this$1.startNodeAt(start, startLoc)\n        node.key.name = k\n        this$1.finishNode(node.key, \"Identifier\")\n        return false\n      }\n\n      node.static = tryContextual(\"static\")\n      if (!node.static) { return ExtendedParser.prototype.parseClassElement.apply(this, arguments) }\n\n      var isGenerator = this.eat(tt.star)\n      var isAsync = false\n      if (!isGenerator) {\n        // Special-case for `async`, since `parseClassMember` currently looks\n        // for `(` to determine whether `async` is a method name\n        if (this.options.ecmaVersion >= 8 && this.isContextual(\"async\")) {\n          skipWhiteSpace.lastIndex = this.pos\n          var skip = skipWhiteSpace.exec(this.input)\n          var next = this.input.charAt(this.pos + skip[0].length)\n          if (next === \";\" || next === \"=\") {\n            node.key = this.parseIdent(true)\n            node.computed = false\n            maybeParseFieldValue.call(this, node)\n            this.finishNode(node, \"FieldDefinition\")\n            this.semicolon()\n            return node\n          } else if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n            isAsync = true\n            isGenerator = this.options.ecmaVersion >= 9 && this.eat(tt.star)\n          }\n        } else if (tryContextual(\"get\")) {\n          node.kind = \"get\"\n        } else if (tryContextual(\"set\")) {\n          node.kind = \"set\"\n        }\n      }\n      if (this.type === this.privateNameToken) {\n        this.parsePrivateClassElementName(node)\n        if (this.type !== tt.parenL) {\n          if (node.key.name === \"prototype\") {\n            this.raise(node.key.start, \"Classes may not have a private static property named prototype\")\n          }\n          maybeParseFieldValue.call(this, node)\n          this.finishNode(node, \"FieldDefinition\")\n          this.semicolon()\n          return node\n        }\n      } else if (!node.key) {\n        this.parsePropertyName(node)\n        if ((node.key.name || node.key.value) === \"prototype\" && !node.computed) {\n          this.raise(node.key.start, \"Classes may not have a static property named prototype\")\n        }\n      }\n      if (!node.kind) { node.kind = \"method\" }\n      this.parseClassMethod(node, isGenerator, isAsync)\n      if (!node.kind && (node.key.name || node.key.value) === \"constructor\" && !node.computed) {\n        this.raise(node.key.start, \"Classes may not have a static field named constructor\")\n      }\n      if (node.kind === \"get\" && node.value.params.length !== 0) {\n        this.raiseRecoverable(node.value.start, \"getter should have no params\")\n      }\n      if (node.kind === \"set\" && node.value.params.length !== 1) {\n        this.raiseRecoverable(node.value.start, \"setter should have exactly one param\")\n      }\n      if (node.kind === \"set\" && node.value.params[0].type === \"RestElement\") {\n        this.raiseRecoverable(node.value.params[0].start, \"Setter cannot use rest params\")\n      }\n\n      return node\n\n    };\n\n    // Parse public static fields\n    anonymous.prototype.parseClassMethod = function parseClassMethod (method, isGenerator, isAsync, _allowsDirectSuper) {\n      if (isGenerator || isAsync || method.kind != \"method\" || !method.static || this.options.ecmaVersion < 8 || this.type == tt.parenL) {\n        return ExtendedParser.prototype.parseClassMethod.apply(this, arguments)\n      }\n      maybeParseFieldValue.call(this, method)\n      delete method.kind\n      method = this.finishNode(method, \"FieldDefinition\")\n      this.semicolon()\n      return method\n    };\n\n    // Prohibit arguments in class field initializers\n    anonymous.prototype.parseIdent = function parseIdent (liberal, isBinding) {\n      var ident = ExtendedParser.prototype.parseIdent.call(this, liberal, isBinding)\n      if (this._inStaticFieldValue && ident.name == \"arguments\") { this.raise(ident.start, \"A static class field initializer may not contain arguments\") }\n      return ident\n    };\n\n    return anonymous;\n  }(ExtendedParser))\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/acorn-node/lib/static-class-features/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}}],"sources":{"node_modules/acorn-node/lib/static-class-features/index.js":"/* Generated by `npm run build`, do not edit! */\n\n\"use strict\"\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g\n\nvar acorn = require(\"acorn\")\nvar tt = acorn.tokTypes\n\nfunction maybeParseFieldValue(field) {\n  if (this.eat(tt.eq)) {\n    var oldInFieldValue = this._inStaticFieldValue\n    this._inStaticFieldValue = true\n    field.value = this.parseExpression()\n    this._inStaticFieldValue = oldInFieldValue\n  } else { field.value = null }\n}\n\nvar privateClassElements = require(\"../private-class-elements\")\n\nmodule.exports = function(Parser) {\n  var ExtendedParser = privateClassElements(Parser)\n\n  return /*@__PURE__*/(function (ExtendedParser) {\n    function anonymous () {\n      ExtendedParser.apply(this, arguments);\n    }\n\n    if ( ExtendedParser ) anonymous.__proto__ = ExtendedParser;\n    anonymous.prototype = Object.create( ExtendedParser && ExtendedParser.prototype );\n    anonymous.prototype.constructor = anonymous;\n\n    anonymous.prototype.parseClassElement = function parseClassElement (_constructorAllowsSuper) {\n      var this$1 = this;\n\n      if (this.eat(tt.semi)) { return null }\n\n      var node = this.startNode()\n\n      var tryContextual = function (k, noLineBreak) {\n        if (typeof noLineBreak == \"undefined\") { noLineBreak = false }\n        var start = this$1.start, startLoc = this$1.startLoc\n        if (!this$1.eatContextual(k)) { return false }\n        if (this$1.type !== tt.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n        if (node.key) { this$1.unexpected() }\n        node.computed = false\n        node.key = this$1.startNodeAt(start, startLoc)\n        node.key.name = k\n        this$1.finishNode(node.key, \"Identifier\")\n        return false\n      }\n\n      node.static = tryContextual(\"static\")\n      if (!node.static) { return ExtendedParser.prototype.parseClassElement.apply(this, arguments) }\n\n      var isGenerator = this.eat(tt.star)\n      var isAsync = false\n      if (!isGenerator) {\n        // Special-case for `async`, since `parseClassMember` currently looks\n        // for `(` to determine whether `async` is a method name\n        if (this.options.ecmaVersion >= 8 && this.isContextual(\"async\")) {\n          skipWhiteSpace.lastIndex = this.pos\n          var skip = skipWhiteSpace.exec(this.input)\n          var next = this.input.charAt(this.pos + skip[0].length)\n          if (next === \";\" || next === \"=\") {\n            node.key = this.parseIdent(true)\n            node.computed = false\n            maybeParseFieldValue.call(this, node)\n            this.finishNode(node, \"FieldDefinition\")\n            this.semicolon()\n            return node\n          } else if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n            isAsync = true\n            isGenerator = this.options.ecmaVersion >= 9 && this.eat(tt.star)\n          }\n        } else if (tryContextual(\"get\")) {\n          node.kind = \"get\"\n        } else if (tryContextual(\"set\")) {\n          node.kind = \"set\"\n        }\n      }\n      if (this.type === this.privateNameToken) {\n        this.parsePrivateClassElementName(node)\n        if (this.type !== tt.parenL) {\n          if (node.key.name === \"prototype\") {\n            this.raise(node.key.start, \"Classes may not have a private static property named prototype\")\n          }\n          maybeParseFieldValue.call(this, node)\n          this.finishNode(node, \"FieldDefinition\")\n          this.semicolon()\n          return node\n        }\n      } else if (!node.key) {\n        this.parsePropertyName(node)\n        if ((node.key.name || node.key.value) === \"prototype\" && !node.computed) {\n          this.raise(node.key.start, \"Classes may not have a static property named prototype\")\n        }\n      }\n      if (!node.kind) { node.kind = \"method\" }\n      this.parseClassMethod(node, isGenerator, isAsync)\n      if (!node.kind && (node.key.name || node.key.value) === \"constructor\" && !node.computed) {\n        this.raise(node.key.start, \"Classes may not have a static field named constructor\")\n      }\n      if (node.kind === \"get\" && node.value.params.length !== 0) {\n        this.raiseRecoverable(node.value.start, \"getter should have no params\")\n      }\n      if (node.kind === \"set\" && node.value.params.length !== 1) {\n        this.raiseRecoverable(node.value.start, \"setter should have exactly one param\")\n      }\n      if (node.kind === \"set\" && node.value.params[0].type === \"RestElement\") {\n        this.raiseRecoverable(node.value.params[0].start, \"Setter cannot use rest params\")\n      }\n\n      return node\n\n    };\n\n    // Parse public static fields\n    anonymous.prototype.parseClassMethod = function parseClassMethod (method, isGenerator, isAsync, _allowsDirectSuper) {\n      if (isGenerator || isAsync || method.kind != \"method\" || !method.static || this.options.ecmaVersion < 8 || this.type == tt.parenL) {\n        return ExtendedParser.prototype.parseClassMethod.apply(this, arguments)\n      }\n      maybeParseFieldValue.call(this, method)\n      delete method.kind\n      method = this.finishNode(method, \"FieldDefinition\")\n      this.semicolon()\n      return method\n    };\n\n    // Prohibit arguments in class field initializers\n    anonymous.prototype.parseIdent = function parseIdent (liberal, isBinding) {\n      var ident = ExtendedParser.prototype.parseIdent.call(this, liberal, isBinding)\n      if (this._inStaticFieldValue && ident.name == \"arguments\") { this.raise(ident.start, \"A static class field initializer may not contain arguments\") }\n      return ident\n    };\n\n    return anonymous;\n  }(ExtendedParser))\n}\n"},"lineCount":140}},"error":null,"hash":"c9f3e95f9941c753e726eb5a8d489e23","cacheData":{"env":{}}}